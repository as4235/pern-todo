{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajkum\\\\Desktop\\\\pern\\\\client\\\\src\\\\components\\\\ListTodos.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListTodos = () => {\n  _s();\n\n  async function getTodos() {\n    const res = await fetch(\"http://localhost:5000/todos\");\n    const array = await res.json(); // like we use req.body, but here we are getting response and in the form of json\n\n    console.log(array);\n  }\n\n  useEffect(() => {\n    // useEffect is like ngOnInIt. runs automatically everytime the page loads.\n    getTodos(); // useEffect runs the function getTodos and passes the values. There isn't one value so '[]' empty\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\"  \", /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListTodos, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ListTodos;\nexport default ListTodos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTodos\");","map":{"version":3,"sources":["C:/Users/ajkum/Desktop/pern/client/src/components/ListTodos.js"],"names":["React","Fragment","useState","useEffect","ListTodos","getTodos","res","fetch","array","json","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,iBAAeC,QAAf,GAA0B;AACtB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AAEA,UAAMC,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAApB,CAHsB,CAGY;;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH;;AAEDL,EAAAA,SAAS,CAAC,MAAM;AAAU;AACtBE,IAAAA,QAAQ,GADI,CACU;AACzB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,QAAD;AAAA,eACK,IADL,eAEI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAlCD;;GAAMD,S;;KAAAA,S;AAoCN,eAAeA,SAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\n\r\nconst ListTodos = () => {\r\n\r\n    async function getTodos() {\r\n        const res = await fetch(\"http://localhost:5000/todos\");\r\n\r\n        const array = await res.json();   // like we use req.body, but here we are getting response and in the form of json\r\n        console.log(array);\r\n    }\r\n\r\n    useEffect(() => {         // useEffect is like ngOnInIt. runs automatically everytime the page loads.\r\n        getTodos();           // useEffect runs the function getTodos and passes the values. There isn't one value so '[]' empty\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            {\"  \"}\r\n            <table className=\"table mt-5\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Description</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/* <tr>\r\n                        <td>John</td>\r\n                        <td>Doe</td>\r\n                        <td>john@example.com</td>\r\n                    </tr> */}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ListTodos;"]},"metadata":{},"sourceType":"module"}